<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
         http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
         http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context-4.0.xsd
         http://www.springframework.org/schema/tx
         http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
         http://www.springframework.org/schema/aop 
         http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
         http://www.springframework.org/schema/task    
        http://www.springframework.org/schema/task/spring-task-4.0.xsd">
	<context:annotation-config />
	<context:component-scan base-package="cn.yh.st">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
		<context:exclude-filter type="annotation"
			expression="org.springframework.web.bind.annotation.ControllerAdvice" />
	</context:component-scan>


	<context:property-placeholder location="classpath:conf.properties"
		ignore-unresolvable="true" />

	<bean id="dataSource" class="com.alibaba.druid.pool.xa.DruidXADataSource" init-method="init"
		destroy-method="close">
		<property name="url" value="${jdbc.one.url}" />
		<property name="username" value="${jdbc.one.username}" />
		<property name="password" value="${jdbc.one.password}" />
		<property name="maxActive" value="10" />

		<property name="filters">
			<value>stat</value>
		</property>
		<property name="initialSize">
			<value>1</value>
		</property>
		<property name="maxWait">
			<value>60000</value>
		</property>
		<property name="minIdle">
			<value>1</value>
		</property>

		<property name="timeBetweenEvictionRunsMillis">
			<value>60000</value>
		</property>
		<property name="minEvictableIdleTimeMillis">
			<value>300000</value>
		</property>

		<property name="validationQuery">
			<value>SELECT 'x'</value>
		</property>
		<property name="testWhileIdle">
			<value>true</value>
		</property>
		<property name="testOnBorrow">
			<value>false</value>
		</property>
		<property name="testOnReturn">
			<value>false</value>
		</property>

		<property name="poolPreparedStatements">
			<value>true</value>
		</property>
		<property name="maxOpenPreparedStatements">
			<value>20</value>
		</property>
	</bean>

	<bean id="atomikosDataSource" class="com.atomikos.jdbc.AtomikosDataSourceBean" init-method="init"
		destroy-method="close">
		<property name="uniqueResourceName" value="cdc2" />
		<property name="xaDataSource" ref="dataSource" />
	</bean>

	<bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="atomikosDataSource" />
		<property name="mapperLocations" value="classpath*:mybatis/one/*.xml" />
	</bean>



	<bean class="tk.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="cn.yh.st.dao.one" />
		<property name="sqlSessionFactoryBeanName" value="sessionFactory" />
	</bean>

	<!-- <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"> 
		<property name="dataSource" ref="dataSource"/> </bean> -->

	<bean id="atomikosTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager"
		init-method="init" destroy-method="close">
		<description>UserTransactionManager</description>
		<property name="forceShutdown" value="false" />
	</bean>

	<bean id="atomikosUserTransaction" class="com.atomikos.icatch.jta.UserTransactionImp">
		<property name="transactionTimeout" value="300" />
	</bean>

	<!-- <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/> -->
	<bean id="JtaTransactionManager" class="org.springframework.transaction.jta.JtaTransactionManager">
		<property name="transactionManager" ref="atomikosTransactionManager" />
		<property name="userTransaction" ref="atomikosUserTransaction" />
	</bean>
	<tx:annotation-driven />
                                                                                       </beans>